{"name":"Mockfiles","tagline":"","body":"# MockFiles\r\n\r\nHelper for C# testing. Create json mock data from your integration tests, and re-use them on the fly in your unit tests.\r\n\r\n## Usage\r\n\r\nIn your integration tests, stub out your return data using *MockProvider.RegisterStub*. The class must implement an interface.\r\n\r\n\r\n```c#\r\n            var band = new Band(); // implements IBand\r\n            var members = band.GetMembers();\r\n            MockProvider.RegisterStub(band, new Func<List<Member>>(band.GetMembers), members);\r\n            /// Creates file \"IBand.GetMembers.json\"\r\n```\r\n\r\nOnce the json files exist in your test folder. Use them as much as you want in your unit tests by creating mocks using *MockProvider.GetMock<T>* where T is the Interface to be used.\r\n\r\n\r\n```c#\r\n            var mockBand = MockProvider.GetMock<IBand>();\r\n            var stubMembers = mockBand.GetMembers();\r\n```\r\n\r\nMethods with parameters will create json files with the signature described in the filename.\r\neg. \r\n```\r\nvar members = band.GetMembersByStatus(true);\r\nMockProvider.RegisterStub(band, new Func<bool, List<Member>>(band.GetMembersByStatus), members); \r\n// will create a json file named \"IBand.GetMembersByStatus_Boolean.json\"\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}